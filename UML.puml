@startuml

' Defining the interfaces
interface IProduct {
    +id: string;
    +title: string;
    +description: string;
    +price: number | null;
    +image: string;
}

interface IPersonalInfo {
    +email: string;
    +phone: string;
}

interface IOrder {
    +payment: string;
    +deliveryAddress: string;
}

' Class definitions
class ApiModel {
    +async getListProducts(): Promise<IProduct[]>
    +async getProduct(product: IProduct): Promise<IProduct>
}

class ModelView {
    +setContent(content: HTMLElement): void
    +open(): void
    +close(): void
}

class BasketView {
    +addToBasket(product: IProduct): void
    +removeFromBasket(product: IProduct): void
    +renderBasket(): void
}

class FormView {
    +render(): HTMLElement
    +init(): void
}

class OrderView {
    +init(): void
    +validate(): boolean
}

class PersonalInfoView {
    +init(): void
    +validate(): boolean
}

class ProductListView {
    +render(): HTMLElement
    +displayProducts(products: IProduct[]): void
}

class SuccessView {
    +render(): HTMLElement
}

ProductListView  <|-- IProduct
OrderView  <|-- IOrder
PersonalInfoView  <|-- IPersonalInfo

FormView <|-- OrderView 
FormView <|-- PersonalInfoView
ApiModel --> ProductListView 

BasketView --> ModelView 
FormView --> ModelView
ProductListView --> ModelView 
SuccessView --> ModelView


@enduml
